'''
*
Написать рекурсивную функцию, которая принимает список 
и печатает каждых элемент на новой строке. 
Если элемент списка - список, то его элементы должны выводиться 
с отступом относительно родительского на 2 символа. 
Символ для отступа передать дополнительными необязательным параметром.

** написать такую же функцию но без рекурсии

Пример1: some_list = [1, 2, 3, [4, [5, 6], 7], 8, 9]
1
2
3
--4
----5
----6
--7
8
9

Пример2: some_list=[1,[2,[[3],4]],5,[[[6,7]]],8,[[[[9,10]],11]],12]
1
--2
------3
----4
5
------6
------7
8
--------9
--------10
----11
12




'''

some_list = [1, 2, 3, [4, [5, 6], 7], 8, 9]

def get_l_num(items, sp="", space= "-"):
    """
    Рекурсивно выводит элементы вложенного списка на экран.

    Каждый элемент выводится на новой строке. Если элемент является списком,
    его элементы выводятся с отступом, который увеличивается на два символа
    для каждого уровня вложенности.

    Аргументы:
    items (list): Список, содержащий элементы, которые нужно вывести.
    sp (str): Строка отступа, используемая для форматирования вывода.
              По умолчанию пустая строка.
    space (str): Символ, используемый для создания отступов. По умолчанию "-".
    """
    for i in items:
        if isinstance(i, list):
            get_l_num(i, sp + space * 2, space)
        else:
            print(sp + str(i))


get_l_num(some_list)


